name: multi
modules:
  - name: std
    import_path: flow_operations.operations
  - name: sequencers
    import_path: ADF.components.flow_config
flows:
  - name: test-flow
    steps:
      - layer: light
        name: landing-step
        start: landing
      - layer: heavy
        name: file-transition-step-out
      - layer: light
        name: file-transition-step-in
        transition_write_out: false
      - layer: expose
        name: meta-step
        meta:
          columns:
            - name: col_0
              cast: str
              in_partition: true
            - name: col_1
              cast: int
            - name: col_2
              cast: float
            - name: col_3
              cast: str
            - name: col_missing
          on_missing_default: fill
          on_extra: cut
        sequencer:
          class_name: StrictIterativeSequencer
          module: sequencers
          params:
            batch_init: '0'
            iterator:
              load_as: eval
              params:
                expr: 'lambda x: str(int(x) + 1)'
      - layer: expose
        name: second-partition-step
        meta:
          columns:
            - name: col_0
              cast: str
              in_partition: true
            - name: col_1
              cast: int
            - name: col_2
              cast: float
            - name: col_3
              cast: str
            - name: col_missing
          on_missing_default: fill
          on_extra: cut
      - layer: second
        name: transition-step
        meta:
          columns:
            - name: col_0
              cast: str
            - name: col_1
              cast: int
            - name: col_2
              cast: float
            - name: col_3
              cast: str
            - name: col_missing
          on_missing_default: fill
          on_extra: cut
  - name: extra-flow
    steps:
      - layer: light
        name: landing-step
        start: landing
      - layer: expose
        name: meta-step
        func:
          load_as: eval
          params:
            expr: 'lambda x: x'
        meta:
          columns:
            - name: col_0
              cast: str
            - name: col_1
              cast: int
          on_missing_default: fill
          on_extra: cut
      - layer: expose
        name: group-step
        func:
          load_as: module
          params:
            module: std
            name: group_op
        meta:
          columns:
            - name: col_0
              cast: str
            - name: col_1_sum
              cast: int
            - name: min_col_1
              cast: int
            - name: max_col_1
              cast: int
            - name: count
              cast: int
            - name: n_col_1
              cast: int
          on_missing_default: fill
          on_extra: cut
  - name: combine-sql-to-sql
    steps:
      - layer: expose
        name: combination-step
        start: combination
        input_steps:
          - flow_name: test-flow
            step_name: meta-step
          - flow_name: extra-flow
            step_name: group-step
        func:
          load_as: module
          params:
            module: std
            name: join_combination_op
        meta:
          columns:
            - name: col_0
              cast: str
            - name: l_col_1
              cast: int
            - name: l_col_2
              cast: float
            - name: r_n_col_1
              cast: int
            - name: extra_col
              cast: str
          on_missing_default: fill
          on_extra: cut
